@page "/Cursos"

<PageTitle>Cursos e Pontuações</PageTitle>

<MudItem xs="12" md="8" class="items-left">
    <h1>
        <MudIcon Icon="@Icons.Material.Outlined.ListAlt" />
        Cursos e Pontuações!
    </h1>
    <p class="font-normal text-left ml-8">
        <i>Pesquise os cursos e suas pontuações!</i>
    </p>
</MudItem>

<MudTable Items="filteredRows" Filter="FilterFunc" Hover="hover" Striped="striped" FixedHeader="@fixedheader">

    <ToolBarContent>
        <MudText Typo="Typo.h6">
            Utilize o campo de pesquisa
            <MudIcon Icon="@Icons.Material.Outlined.Search"></MudIcon>
        </MudText>

        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Pesquisar..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"
                      Style="width: 100%; max-width: 200px; margin-left: auto; margin-right: 0;"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh Style="background-color: #17c969; color: white;">Ordem</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Curso</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Turno</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Universidade</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Local</MudTh>        
        <MudTh Style="background-color: #17c969; color: white;">Pontos em 2022</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Pontos em 2023</MudTh>
        <MudTh Style="background-color: #17c969; color: white;">Pesos</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Ordem">@context.Split()[0]</MudTd>
        <MudTd DataLabel="Curso">@context.Split()[1]</MudTd>
        <MudTd DataLabel="Turno">@context.Split()[2]</MudTd>
        <MudTd DataLabel="Universidade">@context.Split()[3]</MudTd>
        <MudTd DataLabel="Local">@context.Split()[4]</MudTd>        
        <MudTd DataLabel="Pontos em 2022">@context.Split()[5]</MudTd>
        <MudTd DataLabel="Pontos em 2023">@context.Split()[6]</MudTd>
        <MudTd DataLabel="Pesos">
            <MudButton StartIcon="@Icons.Material.Filled.Info" IconColor="Color.Info" Size="Size.Medium"></MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>




@code {
    private string searchString1 = "";

    private bool hover = true;

    private bool striped = true;

    bool fixedheader = true;

    string[] rows = {
        @"1 Direito Manhã Universidade Aracaju 500 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 100 800",
        @"6 Design Manhã Universidade Socorro 800 800",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        @"1 Direito Manhã Universidade Aracaju 600 800",
        @"2 Medicina Tarde Universidade Lagarto 400 800",
        @"3 Jornalismo Noite Universidade Itabaiana 500 800",
        @"4 Enfermagem Tarde Universidade Socorro 200 800",
        @"5 Enfermagem Noite Universidade Socorro 1000 800",
        @"6 Design Manhã Universidade Socorro 500 400",
        
    };


    private Dictionary<string, bool> popoverStates = new();

    private void ToggleOpen(string rowKey)

    {

        if (popoverStates.ContainsKey(rowKey))

        {

            popoverStates[rowKey] = !popoverStates[rowKey];

        }

        else

        {

            popoverStates[rowKey] = true;

        }

    }
    private bool GetPopoverState(string rowKey)

    {

        return popoverStates.ContainsKey(rowKey) && popoverStates[rowKey];

    }


    private IEnumerable<string> filteredRows => rows.Where(FilterFunc);

    private bool FilterFunc(string item)

    {
        if (string.IsNullOrWhiteSpace(searchString1))



            return true;

        // Converte o valor de busca e a string do item para minúsculas para a comparação

        var lowerSearchString = searchString1.ToLower();

        return item.ToLower().Contains(lowerSearchString);
    }

}
