@page "/Redacao"
@using MudBlazor
@inject NavigationManager Navigation

<PageTitle>Teste Sua Redação</PageTitle>


<MudItem xs="12" md="8" class="items-left">
    <h1>
        <MudIcon Icon="@Icons.Material.Outlined.ListAlt" />
        Editor de Redação!
    </h1>

    <p class="font-normal text-left ml-8">
        <i>Avalie como está a sua redação e receba uma nota!</i>
        <MudTooltip Text="Veja as Regras">
            <MudToggleIconButton @bind-Toggled="@_open" Icon="@Icons.Material.Filled.Info" Color="@Color.Info" ToggledIcon="@Icons.Material.Filled.FullscreenExit" ToggledColor="@Color.Secondary" />
        </MudTooltip>

        <MudPopover Open="@_open" Fixed="true" Class="px-4 pt-4">
            <div class="d-flex flex-column">
                <MudText>
                    <h3>Sobre o Texto</h3>
                    • Domínio da escrita formal em língua portuguesa.<br>
                    • Compreensão do tema e aplicação das áreas de conhecimento.<br>
                    • Capacidade de interpretação das informações e organização dos argumentos.<br>
                    • Domínio dos mecanismos linguísticos de argumentação.
                    <h3>Cálculo da Nota</h3>
                    • Para o cálculo da nota do <strong>ENEM</strong>, é usada uma régua de correção.<br>
                    • Essa régua varia de <strong>100</strong> em <strong>100</strong> pontos, tendo o <strong>500</strong> como ponto central.<br>
                    • Cada questão da prova é posicionada nessa régua, de acordo com seu grau de dificuldade.<br>
                    • As perguntas medianas ficam perto do <strong>500</strong>, as mais fáceis ficam abaixo e as mais difíceis, acima.<br><br>
                </MudText>

                <MudButton OnClick="@ToggleOpen" Class="ml-auto mr-n3 mb-1" Variant="Variant.Filled" Color="Color.Primary">Fechar</MudButton>
            </div>
        </MudPopover>
    </p>
</MudItem>

<div style="display: flex; justify-content: space-between; align-items: center; padding: 16px;">
    <p class="font-normal text-left">
        <i>Clique e escolha um tema!</i> <MudIcon Icon="@Icons.Material.Filled.ArrowDownward"></MudIcon>
    </p>

    <MudButton StartIcon="@Icons.Material.Rounded.Refresh" OnClick="@RefreshPage" Variant="Variant.Outlined" Color="Color.Primary">
        Atualize os Temas
    </MudButton>

</div>

<MudGrid>
    <MudItem xs="12" sm="6" md="4" lg="4">
        <MudCard @onclick='() => UpdateTextFieldTitle(cardTitles[0])'
                 style="border-radius: 12px; width: 100%; max-width: 500px; margin: auto; background-color: #37474F;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Color="Color.Tertiary">@cardTitles[0]</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudTooltip Text="Google">
                        <MudLink Href="https://www.google.com" Target="_blank">
                            <MudIconButton Icon="@Icons.Material.Filled.Web" Color="Color.Tertiary" />
                        </MudLink>
                    </MudTooltip>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudText Color="Color.Tertiary"><i>Para textos de apoio utilize o google!</i></MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="4">
        <MudCard @onclick='() => UpdateTextFieldTitle(cardTitles[1])'
                 style="border-radius: 12px; width: 100%; max-width: 500px; margin: auto; background-color: #4E342E;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Color="Color.Tertiary">@cardTitles[1]</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudTooltip Text="Google">
                        <MudLink Href="https://www.google.com" Target="_blank">
                            <MudIconButton Icon="@Icons.Material.Filled.Web" Color="Color.Tertiary" />
                        </MudLink>
                    </MudTooltip>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudText Color="Color.Tertiary"><i>Para textos de apoio utilize o google!</i></MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="4">
        <MudCard @onclick='() => UpdateTextFieldTitle(cardTitles[2])'
                 style="border-radius: 12px; width: 100%; max-width: 500px; margin: auto; background-color: #004D40;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Color="Color.Tertiary">@cardTitles[2]</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudTooltip Text="Google">
                        <MudLink Href="https://www.google.com" Target="_blank">
                            <MudIconButton Icon="@Icons.Material.Filled.Web" Color="Color.Tertiary" />
                        </MudLink>
                    </MudTooltip>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudText Color="Color.Tertiary"><i>Para textos de apoio utilize o google!</i></MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<br>

<MudTextField T="string" Label="Escreva: de 20/Min a 40/Max linhas" Variant="Variant.Filled" Text="@sampleText" TextChanged="OnTextChanged" Lines="25" Style="height: 500px; width: 100%;" />

<mudgrid class="d-flex align-items-center">    
    <MudButton Variant="Variant.Filled" DropShadow="true" Color="Color.Primary" OnClick="@StartProgress" Disabled="@isButtonDisabled" class="ml-2" style="height: 40px">
        Enviar
    </MudButton>
    <MudProgressLinear Color="Color.Primary" Value="@Value" Class="my-7 ml-2" Striped="true" Size="Size.Medium" />
</mudgrid>



<MudPopover Open="@_open2" Fixed="true"
            Style="position: fixed; top: 0%; margin-left: 30%; width: 90vw; max-width: 600px; height: 650vw; max-height: 650px; padding: 16px; box-sizing: border-box;"
            OnOpen="EmitirNota">
    <MudText>
        <h2>Redação Enviada com Sucesso!</h2>
        <p>
            Sua redação foi enviada a sua professora para correção.<br>
            Em breve, você receberá um feedback detalhado com sugestões de melhorias e sua pontuação.<br>
            Fique de olho na sua área de correções para acompanhar o seu progresso.
        </p>
    </MudText>

    <!-- Contador de Nota Simplificado -->
    <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h6" GutterBottom>Nota Simulada de Redação do ENEM</MudText>
                <MudForm @ref="form">
                    <MudTextField @bind-Value="criterios[0]" Label="Domínio da escrita" Variant="Variant.Filled" InputType="InputType.Number"
                                  Min="0" Max="200" Immediate="true" ReadOnly="true" Adornment="Adornment.End" AdornmentText="/ 200" />
                    <MudTextField @bind-Value="criterios[1]" Label="Compreensão do tema" Variant="Variant.Filled" InputType="InputType.Number"
                                  Min="0" Max="200" Immediate="true" ReadOnly="true" Adornment="Adornment.End" AdornmentText="/ 200" />
                    <MudTextField @bind-Value="criterios[2]" Label="Interpretação das informações" Variant="Variant.Filled" InputType="InputType.Number"
                                  Min="0" Max="200" Immediate="true" ReadOnly="true" Adornment="Adornment.End" AdornmentText="/ 200" />
                    <MudTextField @bind-Value="criterios[3]" Label="Conhecimento dos mecanismos linguísticos" Variant="Variant.Filled" InputType="InputType.Number"
                                  Min="0" Max="200" Immediate="true" ReadOnly="true" Adornment="Adornment.End" AdornmentText="/ 200" />
                    <MudTextField @bind-Value="criterios[4]" Label="Respeito aos direitos humanos" Variant="Variant.Filled" InputType="InputType.Number"
                                  Min="0" Max="200" Immediate="true" ReadOnly="true" Adornment="Adornment.End" AdornmentText="/ 200" />

                    <MudText Typo="Typo.subtitle1" Class="mt-4"><strong>Nota Total: @totalNota</strong></MudText>
                </MudForm>
            </MudCardContent>
        </MudCard>
    </MudContainer><br>
    <MudButton OnClick="@ToggleOpen2" Style="margin-left: 45%" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small">Fechar</MudButton>
</MudPopover>

@code {
    private bool _open { get; set; }
    private bool _open2 { get; set; }
    private string sampleText { get; set; } = string.Empty;
    private bool isButtonDisabled { get; set; } = true;
    private string[] cardTitles { get; set; } = new string[3];
    private string[] themes { get; set; } = new string[]
    {
        "Desigualdade Social no Brasil",
        "Violência Urbana e Segurança Pública",
        "Educação e Tecnologia na Era Digital",
        "Impactos das Mídias Sociais na Comunicação",
        "A Crise Hídrica e o Futuro da Água no Brasil",
        "Políticas Públicas de Saúde e Acesso à Saúde",
        "Mobilidade Urbana e Transporte Público",
        "Sustentabilidade e Consumo Consciente",
        "Juventude e Desemprego",
        "Direitos Humanos e Igualdade de Gênero",
        "A Influência da Publicidade nas Decisões de Consumo",
        "Desafios do Sistema Penitenciário Brasileiro",
        "Inclusão e Diversidade nas Escolas",
        "A Cultura do Cancelamento e a Liberdade de Expressão",
        "Questões Ambientais e Mudanças Climáticas",
        "O Papel da Família na Formação do Caráter dos Jovens",
        "Tecnologia e Privacidade: Limites e Possibilidades",
        "A Relevância das Atividades Extracurriculares na Educação",
        "Preconceito e Discriminação no Mercado de Trabalho",
        "O Impacto do Teletrabalho na Vida Profissional e Pessoal",
        "Envelhecimento da População e Políticas Públicas",
        "A Importância da Leitura na Formação do Cidadão",
        "O Papel das ONGs na Assistência Social",
        "A Influência dos Influenciadores Digitais nas Novas Gerações",
        "Globalização e Suas Consequências Locais",
        "Segurança Alimentar e Agricultura Sustentável",
        "O Desafio da Mobilidade Sustentável nas Cidades",
        "Saúde Mental e o Estigma em Relação às Doenças Psíquicas",
        "A Problemática do Lixo e Reciclagem nas Áreas Urbanas",
        "Empreendedorismo Jovem e Inovação",
        "Cultura e Identidade Nacional em um Mundo Globalizado",
        "A Eficácia das Políticas de Segurança Pública",
        "O Impacto das Novas Tecnologias na Educação",
        "Direitos dos Animais e Bem-Estar Animal",
        "A Questão da Habitação e o Crescimento das Favelas",
        "A Importância da Ética na Sociedade Contemporânea",
        "O Papel da Arte na Formação da Consciência Social",
        "Crise Econômica e Desigualdade Social",
        "O Impacto do Aquecimento Global no Brasil",
        "A Convivência Intergeracional e Seus Desafios",
        "A Cultura da Violência no Brasil",
        "A Importância da Participação Social e Política dos Jovens",
        "O Impacto da Pandemia de COVID-19 na Saúde Mental",
        "Tecnologia e Saúde: Inovações e Desafios",
        "A Importância do Voluntariado na Sociedade Atual",
        "O Papel do Estado no Combate à Pobreza",
        "Direitos Indígenas e Preservação Cultural",
        "O Uso de Drogas e Seus Impactos Sociais",
        "A Questão da Mobilidade Urbana nas Grandes Cidades",
        "A Eficiência Energética e a Sustentabilidade",
        "A Evolução do Papel da Mulher na Sociedade",
        "Cultura Digital e Seus Desafios",
        "A Relação entre Ciência e Religião na Sociedade Atual",
        "Os Desafios do Sistema Educacional Brasileiro",
        "O Problema da Evasão Escolar no Brasil",
        "A Preservação dos Biomas Brasileiros",
        "A Contribuição das Mídias Digitais na Educação",
        "O Futuro do Trabalho na Era da Automação",
        "O Desafio da Inclusão Digital no Brasil",
        "A Importância do Lazer na Qualidade de Vida"
    };

    protected override void OnInitialized()
    {
        GenerateRandomThemes();
        base.OnInitialized();
        EmitirNota();
        sampleText = string.Empty;
        ValidateText();
    }

    private void GenerateRandomThemes()
    {
        Random random = new Random();
        cardTitles[0] = themes[random.Next(themes.Length)];
        cardTitles[1] = themes[random.Next(themes.Length)];
        cardTitles[2] = themes[random.Next(themes.Length)];
    }

    private void RefreshPage()
    {
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }

    private void UpdateTextFieldTitle(string cardTitle)
    {
        sampleText = cardTitle;
        ValidateText();
    }

    private void ToggleOpen()
    {
        _open = !_open;
    }

    private void ToggleOpen2()
    {
        _open2 = !_open2;
    }

    private int Value { get; set; } = 0;
    private bool _disposed { get; set; }

    private async Task StartProgress()
    {
        await SimulateProgressAsync();
    }

    public async Task SimulateProgressAsync()
    {
        Value = 0;
        _open2 = false;
        do
        {
            if (_disposed)
            {
                return;
            }
            Value += 4;
            StateHasChanged();
            await Task.Delay(100);
        } while (Value < 100);

        _open2 = true;
        StateHasChanged();

        await Task.Delay(1000);
        Value = 0;
    }

    public void Dispose() => _disposed = true;

    private MudForm form { get; set; }
    private int[] criterios { get; set; } = new int[5] { 160, 180, 170, 150, 190 };
    private int totalNota { get; set; }

    private void EmitirNota()
    {
        totalNota = criterios.Sum();
    }


    private const int MinLines = 20;
    private const int MaxLines = 40;
   

    private void ValidateText()
    {
        var lines = sampleText.Split(new[] { '\n' }, StringSplitOptions.RemoveEmptyEntries);

        // Verifica se o número de linhas está dentro dos limites especificados
        bool isValid = lines.Length >= MinLines && lines.Length <= MaxLines;

        isButtonDisabled = !isValid;
        StateHasChanged(); // Atualiza o estado da UI
    }

    private Task OnTextChanged(string newValue)
    {
        sampleText = newValue;
        ValidateText(); // Revalida o texto sempre que o conteúdo mudar
        return Task.CompletedTask;
    }


}


